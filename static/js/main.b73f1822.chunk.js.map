{"version":3,"sources":["components/Fullpage.js","sections/TitleSection.js","sections/AboutSection.js","components/SkillCard.js","sections/SkillSection.js","components/DownIcon.js","components/UpIcon.js","components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["Fullpage","children","this","props","className","id","Component","library","add","fab","TitleSection","data","title","subtitle","Object","keys","links","map","key","href","url","target","rel","size","prefix","icon","AboutSection","sections","items","content","SkillCard","skill","src","image","alt","SkillSection","each_skill","DownIcon","onClick","faAngleDown","UpIcon","faAngleUp","NavBar","onThemeClick","faPaintBrush","App","changeColor","themeNumber","setState","colorPrimary","colorSecondary","state","console","log","style","color","backgroundColor","snowColor","animationInterval","flakesMaxActive","name","activeClass","to","spy","offset","duration","onSetActive","handleSetActive","icons","down","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"ytDAeeA,G,uLAZH,IACAC,EAAaC,KAAKC,MAAlBF,SACR,OACE,yBACEG,UAAS,mBAAcF,KAAKC,MAAMC,WAAa,IAC/CC,GAAIH,KAAKC,MAAME,IAEdJ,EAAU,S,GARIK,c,oCCOvBC,EAAQC,IAAIC,K,IAuCGC,E,iLApCX,OACE,6BACE,kBAAC,EAAD,CAAUN,UAAU,SAClB,wBAAIA,UAAU,SAASO,EAAKC,OAC5B,wBAAIR,UAAU,YAAYO,EAAKE,UAC/B,yBAAKT,UAAU,kBACZU,OAAOC,KAAKJ,EAAKK,OAAOC,KAAI,SAAAC,GAC3B,OACE,yBAAKd,UAAU,eACb,uBACEe,KAAMR,EAAKK,MAAME,GAAKE,IACtBhB,UAAU,SACViB,OAAO,SACPC,IAAI,uBAEJ,kBAAC,IAAD,CACEC,KAAK,KACLC,OAAO,MACPC,KAAM,CAAC,MAAOd,EAAKK,MAAME,GAAKO,oB,GApBzBnB,aCSZoB,G,uLAbX,OACE,kBAAC,EAAD,CAAUtB,UAAU,SAASC,GAAIH,KAAKC,MAAME,IAC1C,yBAAKD,UAAU,iBACb,wBAAIA,UAAU,eAAeO,EAAKgB,SAAS,GAAGf,QAGhD,yBAAKR,UAAU,gBACb,2BAAIO,EAAKgB,SAAS,GAAGC,MAAM,GAAGC,e,GATbvB,cCiBZwB,G,uLAlBH,IACAC,EAAU7B,KAAKC,MAAf4B,MACR,OACE,yBAAK3B,UAAU,QACb,yBAAKA,UAAU,iBACb,yBACE4B,IAAKD,EAAMF,QAAQI,MACnBC,IAAKH,EAAMF,QAAQjB,MACnBR,UAAU,gBAGd,yBAAKA,UAAU,uBACb,wBAAIA,UAAU,cAAc2B,EAAMF,QAAQjB,a,GAb5BN,cCiBT6B,G,uLAZX,OACE,kBAAC,EAAD,CAAU/B,UAAU,QAAQC,GAAIH,KAAKC,MAAME,IACzC,4BAAKM,EAAKgB,SAAS,GAAGf,OACtB,yBAAKR,UAAU,iBACZO,EAAKgB,SAAS,GAAGC,MAAMX,KAAI,SAAAmB,GAC1B,OAAO,kBAAC,EAAD,CAAWL,MAAOK,a,GAPV9B,c,gBCYZ+B,EAVE,SAAAlC,GACf,OACE,yBAAKC,UAAU,iBAAiBkC,QAASnC,EAAMmC,SAC7C,yBAAKlC,UAAU,QACb,kBAAC,IAAD,CAAiBmB,KAAK,KAAKnB,UAAU,OAAOqB,KAAMc,SCM3CC,EAVA,SAAArC,GACb,OACE,yBAAKC,UAAU,iBAAiBkC,QAASnC,EAAMmC,SAC7C,yBAAKlC,UAAU,QACb,kBAAC,IAAD,CAAiBmB,KAAK,KAAKnB,UAAU,OAAOqB,KAAMgB,SCmB3CC,G,iNArBbvC,MAAQ,CACNwC,aAAc,I,wEAGd,OACE,yBAAKvC,UAAU,UACb,yBAAKA,UAAU,kBACb,4BAAQA,UAAU,QAAQkC,QAASpC,KAAKC,MAAMwC,cAC5C,kBAAC,IAAD,CAAiBpB,KAAK,KAAKnB,UAAU,OAAOqB,KAAMmB,QAGtD,uBAAGzB,KAAK,SAASf,UAAU,SAA3B,cAGA,uBAAGe,KAAK,UAAUf,UAAU,UAA5B,kB,GAfaE,c,gCCgHNuC,E,YAzGb,aAAe,IAAD,8BACZ,+CAQFC,YAAc,WAIZ,OAHyB,IAArB,EAAKC,cACP,EAAKA,YAAc,GAEb,EAAKA,aACX,KAAK,EACH,EAAKC,SAAS,CACZC,aAAc,UACdC,eAAgB,YAElB,MACF,KAAK,EACH,EAAKF,SAAS,CACZC,aAAc,UACdC,eAAgB,YAElB,MACF,KAAK,EACH,EAAKF,SAAS,CACZC,aAAc,UACdC,eAAgB,YAElB,MACF,QACE,EAAKC,MAAQ,CACXF,aAAc,UACdC,eAAgB,WAKtB,EAAKH,cACLK,QAAQC,IAAI,EAAKN,cAvCjB,EAAKI,MAAQ,CACXF,aAAc,UACdC,eAAgB,WAElB,EAAKH,YAAc,EANP,E,sEA2CJ,IAAD,OACP,OACE,yBACE3C,UAAU,MACVkD,MAAO,CACLC,MAAOrD,KAAKiD,MAAMF,aAClBO,gBAAiBtD,KAAKiD,MAAMD,iBAG9B,kBAAC,IAAD,CACEO,UAAU,UACVC,kBAAkB,KAClBC,gBAAgB,QAElB,kBAAC,UAAD,CAASC,KAAK,OAAOxD,UAAU,YAC/B,kBAAC,EAAD,CACEuC,aAAc,WACZ,EAAKG,iBAIT,kBAAC,EAAD,MACA,kBAAC,UAAD,CAASc,KAAK,QAAQxD,UAAU,YAChC,kBAAC,OAAD,CACEyD,YAAY,SACZC,GAAG,QACHC,KAAK,EACLC,OAAQ,GACRC,SAAU,IACVC,YAAahE,KAAKiE,iBAElB,kBAAC,EAAD,CAAU1C,KAAMd,EAAKyD,MAAMC,QAG7B,kBAAC,EAAD,CAAchE,GAAG,UACjB,kBAAC,OAAD,CACEwD,YAAY,SACZC,GAAG,SACHC,KAAK,EACLC,OAAQ,GACRC,SAAU,IACVC,YAAahE,KAAKiE,iBAElB,kBAAC,EAAD,CAAU1C,KAAMd,EAAKyD,MAAMC,QAE7B,kBAAC,UAAD,CAAST,KAAK,SAASxD,UAAU,YACjC,kBAAC,EAAD,CAAcC,GAAG,WACjB,kBAAC,OAAD,CACEwD,YAAY,SACZC,GAAG,OACHC,KAAK,EACLC,OAAQ,GACRC,SAAU,IACVC,YAAahE,KAAKiE,iBAElB,kBAAC,EAAD,CAAQ1C,KAAMd,EAAKyD,MAAMC,a,GAnGjB/D,aCFEgE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.b73f1822.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./fullpage.css\";\r\nclass Fullpage extends Component {\r\n  render() {\r\n    const { children } = this.props;\r\n    return (\r\n      <div\r\n        className={`fullpage ${this.props.className || \"\"}`}\r\n        id={this.props.id}\r\n      >\r\n        {children}{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Fullpage;\r\n","import React, { Component } from \"react\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport data from \"../data.json\";\r\nimport \"./TitleSection.css\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\n\r\nlibrary.add(fab);\r\nclass TitleSection extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Fullpage className=\"first\">\r\n          <h1 className=\"title\">{data.title}</h1>\r\n          <h2 className=\"subtitle\">{data.subtitle}</h2>\r\n          <div className=\"social-wrapper\">\r\n            {Object.keys(data.links).map(key => {\r\n              return (\r\n                <div className=\"social-item\">\r\n                  <a\r\n                    href={data.links[key].url}\r\n                    className=\"social\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    <FontAwesomeIcon\r\n                      size=\"3x\"\r\n                      prefix=\"fab\"\r\n                      icon={[\"fab\", data.links[key].icon]}\r\n                    />\r\n                  </a>\r\n\r\n                  {/* <SocialIcon\r\n                    url={data.links[key].url}\r\n                    target=\"_blank\"\r\n                    rel=\"social\"\r\n                  /> */}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </Fullpage>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default TitleSection;\r\n","import React, { Component } from \"react\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport data from \"../data.json\";\r\nimport \"./AboutSection.css\";\r\nclass AboutSection extends Component {\r\n  render() {\r\n    return (\r\n      <Fullpage className=\"second\" id={this.props.id}>\r\n        <div className=\"title-wrapper\">\r\n          <h3 className=\"about-title\">{data.sections[0].title}</h3>\r\n        </div>\r\n\r\n        <div className=\"text-wrapper\">\r\n          <p>{data.sections[0].items[0].content}</p>\r\n        </div>\r\n      </Fullpage>\r\n    );\r\n  }\r\n}\r\nexport default AboutSection;\r\n","import React, { Component } from \"react\";\r\nimport \"./skillcard.css\";\r\nclass SkillCard extends Component {\r\n  render() {\r\n    const { skill } = this.props;\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"image-wrapper\">\r\n          <img\r\n            src={skill.content.image}\r\n            alt={skill.content.title}\r\n            className=\"card-image\"\r\n          />\r\n        </div>\r\n        <div className=\"skill-title-wrapper\">\r\n          <h4 className=\"skil-title\">{skill.content.title}</h4>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default SkillCard;\r\n","import React, { Component } from \"react\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport data from \"../data.json\";\r\nimport SkillCard from \"../components/SkillCard\";\r\nimport \"./SkillSection.css\";\r\nclass SkillSection extends Component {\r\n  render() {\r\n    return (\r\n      <Fullpage className=\"third\" id={this.props.id}>\r\n        <h3>{data.sections[1].title}</h3>\r\n        <div className=\"cards-wrapper\">\r\n          {data.sections[1].items.map(each_skill => {\r\n            return <SkillCard skill={each_skill} />;\r\n          })}\r\n        </div>\r\n      </Fullpage>\r\n    );\r\n  }\r\n}\r\nexport default SkillSection;\r\n","import React from \"react\";\r\n\r\nimport \"./DownIcon.css\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst DownIcon = props => {\r\n  return (\r\n    <div className=\"down-container\" onClick={props.onClick}>\r\n      <div className=\"down\">\r\n        <FontAwesomeIcon size=\"5x\" className=\"down\" icon={faAngleDown} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DownIcon;\r\n","import React from \"react\";\r\n\r\nimport \"./DownIcon.css\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleUp } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst UpIcon = props => {\r\n  return (\r\n    <div className=\"down-container\" onClick={props.onClick}>\r\n      <div className=\"down\">\r\n        <FontAwesomeIcon size=\"5x\" className=\"down\" icon={faAngleUp} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpIcon;\r\n","import React, { Component } from \"react\";\r\n\r\nimport data from \"../data.json\";\r\nimport \"./NavBar.css\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPaintBrush } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass NavBar extends Component {\r\n  props = {\r\n    onThemeClick: \"\"\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"navbar\">\r\n        <div className=\"theme-warraper\">\r\n          <button className=\"theme\" onClick={this.props.onThemeClick}>\r\n            <FontAwesomeIcon size=\"3x\" className=\"down\" icon={faPaintBrush} />\r\n          </button>\r\n        </div>\r\n        <a href=\"#about\" className=\"about\">\r\n          About me !\r\n        </a>\r\n        <a href=\"#skills\" className=\"skills\">\r\n          My skills\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\n\nimport TitleSection from \"./sections/TitleSection\";\nimport AboutSection from \"./sections/AboutSection\";\nimport SkillSection from \"./sections/SkillSection\";\nimport DownIcon from \"./components/DownIcon\";\nimport UpIcon from \"./components/UpIcon\";\nimport NavBar from \"./components/NavBar\";\nimport data from \"./data.json\";\nimport \"./App.css\";\n\nimport { Link, Element } from \"react-scroll\";\nimport SnowStorm from \"react-snowstorm\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      colorPrimary: \"#ffffff\",\n      colorSecondary: \"#000000\"\n    };\n    this.themeNumber = 0;\n  }\n\n  changeColor = () => {\n    if (this.themeNumber === 3) {\n      this.themeNumber = 0;\n    }\n    switch (this.themeNumber) {\n      case 0:\n        this.setState({\n          colorPrimary: \"#FFE05D\",\n          colorSecondary: \"#A646B3\"\n        });\n        break;\n      case 1:\n        this.setState({\n          colorPrimary: \"#ffffff\",\n          colorSecondary: \"#00CE21\"\n        });\n        break;\n      case 2:\n        this.setState({\n          colorPrimary: \"#ffffff\",\n          colorSecondary: \"#000000\"\n        });\n        break;\n      default:\n        this.state = {\n          colorPrimary: \"#ffffff\",\n          colorSecondary: \"#000000\"\n        };\n        break;\n    }\n\n    this.themeNumber++;\n    console.log(this.themeNumber);\n  };\n  render() {\n    return (\n      <div\n        className=\"App\"\n        style={{\n          color: this.state.colorPrimary,\n          backgroundColor: this.state.colorSecondary\n        }}\n      >\n        <SnowStorm\n          snowColor=\"#ffffff\"\n          animationInterval=\"50\"\n          flakesMaxActive=\"200\"\n        />\n        <Element name=\"home\" className=\"element\"></Element>\n        <NavBar\n          onThemeClick={() => {\n            this.changeColor();\n          }}\n        />\n\n        <TitleSection />\n        <Element name=\"about\" className=\"element\"></Element>\n        <Link\n          activeClass=\"active\"\n          to=\"about\"\n          spy={true}\n          offset={50}\n          duration={500}\n          onSetActive={this.handleSetActive}\n        >\n          <DownIcon icon={data.icons.down} />\n        </Link>\n\n        <AboutSection id=\"about\" />\n        <Link\n          activeClass=\"active\"\n          to=\"skills\"\n          spy={true}\n          offset={50}\n          duration={500}\n          onSetActive={this.handleSetActive}\n        >\n          <DownIcon icon={data.icons.down} />\n        </Link>\n        <Element name=\"skills\" className=\"element\"></Element>\n        <SkillSection id=\"skills\" />\n        <Link\n          activeClass=\"active\"\n          to=\"home\"\n          spy={true}\n          offset={50}\n          duration={500}\n          onSetActive={this.handleSetActive}\n        >\n          <UpIcon icon={data.icons.down} />\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}